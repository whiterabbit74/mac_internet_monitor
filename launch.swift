#!/usr/bin/env swift

// Internet Monitor - macOS Status Bar Application
// Simple Swift script to demonstrate the functionality

import Foundation

print("üåê Internet Monitor - –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
print("=====================================")

// –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
func checkInternetConnection() -> (status: String, latency: Int, packetLoss: Int) {
    let endpoints = ["8.8.8.8", "1.1.1.1", "apple.com"]
    let randomStatus = Int.random(in: 0...2)
    let latency = Int.random(in: 10...200)
    let packetLoss = Int.random(in: 0...50)

    switch randomStatus {
    case 0:
        return ("üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ", latency, 0)
    case 1:
        return ("üü° –ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ", latency, packetLoss)
    default:
        return ("üî¥ –û—Ç–∫–ª—é—á–µ–Ω–æ", -1, 100)
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
func startMonitoring() {
    print("üì± –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...")
    print("‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: 5 —Å–µ–∫—É–Ω–¥")
    print("")

    for i in 1...10 {
        let (status, latency, packetLoss) = checkInternetConnection()
        let timestamp = Date().formatted(date: .omitted, time: .standard)

        print("[\(timestamp)] –ü—Ä–æ–≤–µ—Ä–∫–∞ \(i)/10")
        print("–°—Ç–∞—Ç—É—Å: \(status)")
        if latency > 0 {
            print("Latency: \(latency)ms")
        }
        print("Packet Loss: \(packetLoss)%")
        print("")

        if i < 10 {
            print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...")
            sleep(2) // –°–∏–º—É–ª–∏—Ä—É–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –≤–º–µ—Å—Ç–æ 5
            print("")
        }
    }

    print("‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!")
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
func showSettings() {
    print("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Internet Monitor")
    print("=============================")
    print("Endpoint: 8.8.8.8 (Google DNS)")
    print("–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: 5 —Å–µ–∫—É–Ω–¥")
    print("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –í–∫–ª—é—á–µ–Ω—ã")
    print("–ü–æ–¥—Å–∫–∞–∑–∫–∏: –í–∫–ª—é—á–µ–Ω—ã")
    print("")
}

// –ú–µ–Ω—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
func showMenu() {
    print("üìã –ú–µ–Ω—é Internet Monitor")
    print("========================")
    print("üåê Internet Monitor v1.0")
    print("–°—Ç–∞—Ç—É—Å: üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ")
    print("Latency: 23ms")
    print("Packet Loss: 0%")
    print("")
    print("üìä –û–±–Ω–æ–≤–∏—Ç—å —Å–µ–π—á–∞—Å")
    print("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏...")
    print("‚ùå –í—ã–π—Ç–∏")
    print("")
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
func main() {
    print("üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Internet Monitor!")
    print("======================================")
    print("–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.")
    print("–í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –≤—ã —É–≤–∏–¥–∏—Ç–µ –∏–∫–æ–Ω–∫—É –≤ —Å—Ç–∞—Ç—É—Å-–±–∞—Ä–µ macOS.")
    print("")

    showMenu()
    showSettings()

    let shouldStartMonitoring = askUser("–ù–∞—á–∞—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥? (y/n): ")

    if shouldStartMonitoring.lowercased() == "y" || shouldStartMonitoring.lowercased() == "yes" {
        startMonitoring()
    }

    print("üëã –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Internet Monitor!")
    print("üîß –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤ macOS –Ω—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
func askUser(_ question: String) -> String {
    print(question, terminator: "")
    return readLine() ?? ""
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
main()
